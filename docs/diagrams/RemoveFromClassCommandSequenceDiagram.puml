@startuml
'https://plantuml.com/sequence-diagram

!include Style.puml

box Logic LOGIC_COLOR_T2

participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":RemoveFromClassCommand" as RemoveFromClassCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box
box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "classList:ObservableList<TuitionClass>" as tuitionClassList MODEL_COLOR
participant "c1:TuitionClass" as TuitionClass MODEL_COLOR
participant "studentList:ObservableList<Student>" as studentList MODEL_COLOR
participant "c2:TuitionClass" as newTuitionClass MODEL_COLOR
end box

LogicManager -> RemoveFromClassCommand: execute()
activate RemoveFromClassCommand

RemoveFromClassCommand -> Model: getFilteredTuitionClassList()
activate Model
Model -> tuitionClassList: Get class list
activate tuitionClassList
Model <-- tuitionClassList: classList
deactivate
RemoveFromClassCommand <-- Model: classList
deactivate Model

RemoveFromClassCommand -> tuitionClassList: get(classIndex)
activate tuitionClassList
tuitionClassList -> TuitionClass: Get tuition class
activate TuitionClass
tuitionClassList <-- TuitionClass: c1
deactivate
RemoveFromClassCommand <-- tuitionClassList: c1
deactivate tuitionClassList

RemoveFromClassCommand -> TuitionClass: getStudentList()
activate TuitionClass
RemoveFromClassCommand <-- TuitionClass: nameList
deactivate

RemoveFromClassCommand -> Model: getFilteredStudentList()
activate Model
Model -> studentList: Get student list
activate studentList
Model <-- studentList: studentList
deactivate
RemoveFromClassCommand <-- Model: studentList
deactivate Model

RemoveFromClassCommand -> RemoveFromClassCommand ++: checkIndicesAreValid(studentIndices, studentList)
RemoveFromClassCommand --> RemoveFromClassCommand --

RemoveFromClassCommand -> RemoveFromClassCommand ++: createNewNameList(studentIndices, studentList)
RemoveFromClassCommand --> RemoveFromClassCommand --: newNameList

create newTuitionClass
RemoveFromClassCommand -> newTuitionClass ++ :Create new tuition class with newNameList
RemoveFromClassCommand <-- newTuitionClass -- : c2


RemoveFromClassCommand -> Model: setClass(c1, c2)
activate Model
RemoveFromClassCommand <-- Model
deactivate Model
create CommandResult
RemoveFromClassCommand -> CommandResult
activate CommandResult
RemoveFromClassCommand <-- CommandResult
deactivate CommandResult
LogicManager <-- RemoveFromClassCommand: result
deactivate RemoveFromClassCommand


@enduml
